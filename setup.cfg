[metadata]
name = rubicon-ml
description = "an ML library for model development and governance"
long_description = file: README.md
long_description_content_type = text/markdown
author = "Joe Wolfe, Ryan Soley, Diane Lee, Mike McCarty, CapitalOne"
license = "Apache License, Version 2.0"
url = https://github.com/capitalone/rubicon-ml
python_requires = 
	>=3.8.0
project_urls = 
	Documentation = https://capitalone.github.io/rubicon-ml/
	Bug Tracker = https://github.com/capitalone/rubicon-ml/issues
	Source Code = https://github.com/capitalone/rubicon-ml
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: Information Analysis
	Topic :: Software Development :: Build Tools
	Topic :: Software Development :: Documentation
	License :: OSI Approved :: Apache Software License
	Programming Language :: Python :: 3

[options]
zip_safe = False
include_package_data = True
packages = find:
install_requires = 
	click<=8.1.3,>=7.1
	dask[dataframe]<=2022.5.0,>=2.12.0
	fsspec<=2022.3.0,>=2021.4.0
	intake[dataframe]<=0.6.5,>=0.5.2
	pandas<=1.4.2,>=1.0.0
	pyarrow<=7.0.0,>=0.18.0
	PyYAML<=6.0,>=5.4.0
	s3fs<=2022.3.0,>=0.4

[options.extras_require]
prefect_requires = 
	prefect<=1.2.1,>=0.12.0
ui_requires = 
	dash<=2.3.1,>=2.0.0
	dash-bootstrap-components<=1.1.0,>=1.0.0
all = 
	prefect<=1.2.1,>=0.12.0
	dash<=2.3.1,>=2.0.0
	dash-bootstrap-components<=1.1.0,>=1.0.0

[options.entry_points]
console_scripts = 
	rubicon_ml = rubicon_ml.cli:cli
intake.drivers = 
	rubicon_ml_experiment = rubicon_ml.intake_rubicon.experiment:ExperimentSource

[versioneer]
vcs = git
style = pep440
versionfile_source = rubicon_ml/_version.py
versionfile_build = rubicon_ml/_version.py
tag_prefix = ""
parentdir_prefix = rubicon-ml-

[flake8]
exclude = versioneer.py, rubicon_ml/_version.py, docs, .ipynb_checkpoints
max-line-length = 88
ignore = 
	E731
	E741
	W503
	E203
	E501

[isort]
line_length = 88
skip = versioneer.py, rubicon_ml/_version.py, rubicon/client/__init__.py, rubicon/client/asynchronous/__init__.py, rubicon_ml/client/__init__.py, rubicon_ml/client/asynchronous/__init__.py
filter_files = True
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True

[tool:pytest]
markers = 
	run_notebooks: tests that run Jupyter notebooks
	write_files: tests that physically write files to local and S3 filesystems
addopts = --cov=./rubicon_ml --cov-report=term-missing --cov-fail-under=90 -m="not write_files"
minversion = 3.2
xfail_strict = True

[edgetest.envs.core]
python_version = 3.9
deps = 
	kaleido
	Pillow
	shap
	numba
	matplotlib
conda_install = 
	jupyterlab
	nodejs
	nbconvert
	nbformat
	scikit-learn
	pytest
	pytest-cov
extras = 
	all
upgrade = 
	click
	dask[dataframe]
	fsspec
	intake[dataframe]
	pandas
	pyarrow
	PyYAML
	s3fs
	prefect
	dash
	dash-bootstrap-components

