# Publishes the package to PyPI when a release PR is merged
#
# Public actions used:
#   - https://github.com/actions/checkout
#   - https://github.com/actions/setup-python
#   - https://github.com/astral-sh/setup-uv

name: Publish to PyPI

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: 'latest'
    - name: Install dependencies
      run: |
        uv venv --python $(which python)
        uv sync --extra build
    - name: Build
      run: |
        uv run python -m build
    - name: Test build & get version
      id: get_version
      run: |
        uv pip install dist/rubicon_ml-*.whl
        VERSION=$(uv run python -c 'import rubicon_ml; print(rubicon_ml.__version__)')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        TWINE_REPOSITORY: pypi
      run: |
        uv run twine upload dist/*
    - name: Create GitHub tag & release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_NOTES: ${{ github.event.pull_request.body }}
        VERSION: ${{ steps.get_version.outputs.version }}
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git tag "$VERSION"
        git push origin "$VERSION"
        gh release create "$VERSION" --title "v$VERSION" --notes "$RELEASE_NOTES"
